# Generated from MapLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,102,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,
        1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,3,8,54,8,8,1,8,4,8,57,8,
        8,11,8,12,8,58,1,8,1,8,4,8,63,8,8,11,8,12,8,64,3,8,67,8,8,1,9,1,
        9,5,9,71,8,9,10,9,12,9,74,9,9,1,9,1,9,1,10,1,10,5,10,80,8,10,10,
        10,12,10,83,9,10,1,11,4,11,86,8,11,11,11,12,11,87,1,11,1,11,1,12,
        1,12,5,12,94,8,12,10,12,12,12,97,9,12,1,12,1,12,1,13,1,13,0,0,14,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,0,1,0,7,2,0,43,43,45,45,2,0,39,39,92,92,3,0,65,90,95,95,97,122,
        4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,
        1,0,48,57,108,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,29,1,0,0,0,3,
        31,1,0,0,0,5,35,1,0,0,0,7,42,1,0,0,0,9,44,1,0,0,0,11,46,1,0,0,0,
        13,48,1,0,0,0,15,50,1,0,0,0,17,53,1,0,0,0,19,68,1,0,0,0,21,77,1,
        0,0,0,23,85,1,0,0,0,25,91,1,0,0,0,27,100,1,0,0,0,29,30,5,59,0,0,
        30,2,1,0,0,0,31,32,5,77,0,0,32,33,5,65,0,0,33,34,5,80,0,0,34,4,1,
        0,0,0,35,36,5,70,0,0,36,37,5,73,0,0,37,38,5,76,0,0,38,39,5,84,0,
        0,39,40,5,69,0,0,40,41,5,82,0,0,41,6,1,0,0,0,42,43,5,40,0,0,43,8,
        1,0,0,0,44,45,5,44,0,0,45,10,1,0,0,0,46,47,5,41,0,0,47,12,1,0,0,
        0,48,49,5,91,0,0,49,14,1,0,0,0,50,51,5,93,0,0,51,16,1,0,0,0,52,54,
        7,0,0,0,53,52,1,0,0,0,53,54,1,0,0,0,54,56,1,0,0,0,55,57,3,27,13,
        0,56,55,1,0,0,0,57,58,1,0,0,0,58,56,1,0,0,0,58,59,1,0,0,0,59,66,
        1,0,0,0,60,62,5,46,0,0,61,63,3,27,13,0,62,61,1,0,0,0,63,64,1,0,0,
        0,64,62,1,0,0,0,64,65,1,0,0,0,65,67,1,0,0,0,66,60,1,0,0,0,66,67,
        1,0,0,0,67,18,1,0,0,0,68,72,5,39,0,0,69,71,8,1,0,0,70,69,1,0,0,0,
        71,74,1,0,0,0,72,70,1,0,0,0,72,73,1,0,0,0,73,75,1,0,0,0,74,72,1,
        0,0,0,75,76,5,39,0,0,76,20,1,0,0,0,77,81,7,2,0,0,78,80,7,3,0,0,79,
        78,1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,22,1,0,0,
        0,83,81,1,0,0,0,84,86,7,4,0,0,85,84,1,0,0,0,86,87,1,0,0,0,87,85,
        1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,90,6,11,0,0,90,24,1,0,0,0,
        91,95,5,35,0,0,92,94,8,5,0,0,93,92,1,0,0,0,94,97,1,0,0,0,95,93,1,
        0,0,0,95,96,1,0,0,0,96,98,1,0,0,0,97,95,1,0,0,0,98,99,6,12,0,0,99,
        26,1,0,0,0,100,101,7,6,0,0,101,28,1,0,0,0,9,0,53,58,64,66,72,81,
        87,95,1,6,0,0
    ]

class MapLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    NUMBER = 9
    STRING = 10
    ID = 11
    WS = 12
    COMMENT = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'MAP'", "'FILTER'", "'('", "','", "')'", "'['", "']'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "STRING", "ID", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "NUMBER", "STRING", "ID", "WS", "COMMENT", "DIGIT" ]

    grammarFileName = "MapLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


